/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dfc.www.private_access.admin.products;

import com.fsc.www.db.MC_DB;
import java.sql.ResultSet;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Buwaneka
 */
public class Product extends javax.swing.JPanel {

    int catid;
    int Subcatid;
    String Id2;
    String Id1;
    int CatidForsave;

    /**
     * Creates new form Test_Pannel
     */
    public Product() {
        initComponents();
        load_Cat_to_Combobox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtBuyingPrice = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtPname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1_SubCat = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jComboBox2_Cat = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        txtItemcode = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_product = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jComboBox3_Size = new javax.swing.JComboBox();
        txtSellingPrice = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jPanel1.setLayout(null);

        txtBuyingPrice.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtBuyingPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuyingPriceActionPerformed(evt);
            }
        });
        jPanel1.add(txtBuyingPrice);
        txtBuyingPrice.setBounds(160, 290, 210, 40);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Item Code :");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(40, 190, 100, 40);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Buying Price :");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(40, 290, 130, 40);

        txtPname.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtPname.setEnabled(false);
        txtPname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPnameActionPerformed(evt);
            }
        });
        jPanel1.add(txtPname);
        txtPname.setBounds(160, 240, 210, 40);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Category :");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(40, 40, 100, 40);

        jComboBox1_SubCat.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBox1_SubCat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "~Select Sub Category~" }));
        jComboBox1_SubCat.setPreferredSize(new java.awt.Dimension(56, 50));
        jComboBox1_SubCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1_SubCatActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1_SubCat);
        jComboBox1_SubCat.setBounds(160, 90, 210, 40);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Product Name :");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(40, 240, 130, 40);

        jComboBox2_Cat.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBox2_Cat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "~Select Category~" }));
        jComboBox2_Cat.setPreferredSize(new java.awt.Dimension(56, 50));
        jComboBox2_Cat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2_CatActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox2_Cat);
        jComboBox2_Cat.setBounds(160, 40, 210, 40);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Sub Category :");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(40, 90, 130, 40);

        txtItemcode.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtItemcode.setEnabled(false);
        txtItemcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtItemcodeActionPerformed(evt);
            }
        });
        jPanel1.add(txtItemcode);
        txtItemcode.setBounds(160, 190, 210, 40);

        tbl_product.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Category", "Sub Category", "Size", "Item Code", "Product name", "Unit Price", "Buying Price", "Selling Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_product);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(380, 30, 960, 450);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Size :");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(40, 140, 120, 40);

        jComboBox3_Size.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBox3_Size.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "~Select Size~" }));
        jComboBox3_Size.setPreferredSize(new java.awt.Dimension(56, 50));
        jComboBox3_Size.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3_SizeActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox3_Size);
        jComboBox3_Size.setBounds(160, 140, 210, 40);

        txtSellingPrice.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtSellingPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSellingPriceActionPerformed(evt);
            }
        });
        jPanel1.add(txtSellingPrice);
        txtSellingPrice.setBounds(160, 340, 210, 40);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Selling Price :");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(40, 340, 130, 40);

        jButton1.setText("jButton1");
        jPanel1.add(jButton1);
        jButton1.setBounds(760, 200, 73, 23);

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setText("Add");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(220, 440, 140, 40);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1366, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuyingPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuyingPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuyingPriceActionPerformed

    private void txtPnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPnameActionPerformed

    private void jComboBox1_SubCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1_SubCatActionPerformed

        try {

            if (!jComboBox1_SubCat.getSelectedItem().equals("~Select Sub category~")) {

                new Thread(() -> {
                    try {
////////////////////////////////////////////////Seach Category Id for Genarate Item Code///////////
                        ResultSet rs1 = MC_DB.myConnection().createStatement().executeQuery("SELECT * FROM category WHERE category_name ='" + jComboBox2_Cat.getSelectedItem() + "'  ");
                        while (rs1.next()) {
                            catid = Integer.parseInt(rs1.getString("category_id"));
                            Id1 = "" + catid;
                        }

                        if (catid < 10) {
                            Id1 = "0" + catid;

                        }

                        if (jComboBox1_SubCat.getSelectedIndex() != 0) {
                            ResultSet rs2 = MC_DB.myConnection().createStatement().executeQuery("SELECT * FROM sub_category WHERE sub_category ='" + jComboBox1_SubCat.getSelectedItem() + "'  ");
                            while (rs2.next()) {
                                Subcatid = Integer.parseInt(rs2.getString("sub_cat_id"));
                                Id2 = "" + Subcatid;
                            }
                            if (Subcatid < 10) {
                                Id2 = "0" + Subcatid;

                            }
                        }

                        ////////////////////////////////////////////////////////////////////////////////
                        txtItemcode.setText(Id1 + "" + Id2);

                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }).start();

            } else {
                txtItemcode.setText("");

            }
///////////////////////////////////////////////////////////

            if (!jComboBox2_Cat.getSelectedItem().equals("~Select category~")
                    && !jComboBox1_SubCat.getSelectedItem().equals("~Select Sub category~")) {
                txtPname.setText("");
                String scat = jComboBox1_SubCat.getSelectedItem().toString();
                String cat = jComboBox2_Cat.getSelectedItem().toString();

                txtPname.setText(scat + " " + cat);

            }

        } catch (NullPointerException n) {

        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jComboBox1_SubCatActionPerformed

    private void jComboBox2_CatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2_CatActionPerformed
        try {
            String a = "";
            if (jComboBox2_Cat.getSelectedIndex() != 0 || jComboBox1_SubCat.getSelectedIndex() != 0) {
                txtItemcode.setText("");
            }

            if (!jComboBox2_Cat.getSelectedItem().equals("~Select category~")) {

                ResultSet rs = MC_DB.myConnection().createStatement().executeQuery("SELECT category_id FROM category WHERE category_name= '" + jComboBox2_Cat.getSelectedItem() + "' ");
                while (rs.next()) {
                    a = rs.getString("category_id");
                }
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                ResultSet rs1 = MC_DB.myConnection().createStatement().executeQuery("SELECT sub_category FROM sub_category WHERE category_id = '" + a + "' ");
                DefaultComboBoxModel dcm = (DefaultComboBoxModel) jComboBox1_SubCat.getModel();
                dcm.removeAllElements();
                dcm.addElement("~Select Sub category~");
                while (rs1.next()) {

                    dcm.addElement(rs1.getString("sub_category"));
                }

                if (jComboBox2_Cat.getSelectedItem().equals("Pastry")) {
                    // DefaultComboBoxModel dcm2 = (DefaultComboBoxModel) jComboBox3_Size.getModel();
                    jComboBox3_Size.setSelectedIndex(0);
                    jComboBox3_Size.setEnabled(false);
                } else {
                    jComboBox3_Size.setEnabled(true);
                    load_Size_to_combobox();

                }

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jComboBox2_CatActionPerformed

    private void txtItemcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtItemcodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtItemcodeActionPerformed

    private void jComboBox3_SizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3_SizeActionPerformed
        try {
            if (!jComboBox2_Cat.getSelectedItem().equals("~Select category~")
                    && !jComboBox1_SubCat.getSelectedItem().equals("~Select Sub category~")
                    && !jComboBox3_Size.getSelectedItem().equals("~Select Size~")) {
                txtPname.setText("");
                String Size = jComboBox3_Size.getSelectedItem().toString();
                String scat = jComboBox1_SubCat.getSelectedItem().toString();
                String cat = jComboBox2_Cat.getSelectedItem().toString();

                txtPname.setText(Size + " " + scat + " " + cat);

            }

        } catch (NullPointerException n) {

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jComboBox3_SizeActionPerformed

    private void txtSellingPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSellingPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSellingPriceActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        try {

            new Thread(() -> {

                try {

                    ResultSet rs = MC_DB.myConnection().createStatement().executeQuery("SELECT * FROM category WHERE category_name = '" + jComboBox2_Cat.getSelectedItem() + "' ");
                    while (rs.next()) {
                        CatidForsave = Integer.parseInt(rs.getString("category_id"));
                    }
                    /////////////////////////////////////////////////////////////////////////////////////                
                    MC_DB.myConnection().createStatement().executeUpdate("INSERT INTO item(category_id,item_code,item_name,buying_price,selling_price,status)VALUES('" + CatidForsave + "' "
                            + ", '" + txtItemcode.getText() + "' "
                            + ", '" + txtPname.getText() + "' "
                            + ", '" + Double.parseDouble(txtBuyingPrice.getText()) + "' "
                            + ", '" + Double.parseDouble(txtSellingPrice.getText()) + "' ,'" + "0001" + "')");

                    jComboBox2_Cat.setSelectedIndex(0);
                    jComboBox1_SubCat.setSelectedIndex(0);
                    jComboBox3_Size.setSelectedIndex(0);
                    txtItemcode.setText("");
                    txtPname.setText("");
                    txtBuyingPrice.setText("");
                    txtSellingPrice.setText("");

                    JOptionPane.showMessageDialog(this, "Saved");

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }).start();

        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1_SubCat;
    private javax.swing.JComboBox jComboBox2_Cat;
    private javax.swing.JComboBox jComboBox3_Size;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_product;
    private javax.swing.JTextField txtBuyingPrice;
    private javax.swing.JTextField txtItemcode;
    private javax.swing.JTextField txtPname;
    private javax.swing.JTextField txtSellingPrice;
    // End of variables declaration//GEN-END:variables

    void load_Cat_to_Combobox() {

        new Thread(() -> {

            try {
                ResultSet rs = MC_DB.myConnection().createStatement().executeQuery("SELECT category_name FROM category");
                DefaultComboBoxModel dcm = (DefaultComboBoxModel) jComboBox2_Cat.getModel();

                while (rs.next()) {
                    dcm.addElement((rs.getString("category_name")));
                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        }).start();

    }
    //////////////////////////////////////////////////////////////////////////////////////

    void load_subcat_to_combobox() {

        new Thread(() -> {

            try {
                ResultSet rs = MC_DB.myConnection().createStatement().executeQuery("SELECT sub_category FROM sub_category");
                DefaultComboBoxModel dcm = (DefaultComboBoxModel) jComboBox1_SubCat.getModel();

                while (rs.next()) {
                    dcm.addElement((rs.getString("sub_category")));
                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        }).start();

    }

    void load_Size_to_combobox() {

        new Thread(() -> {

            try {
                ResultSet rs = MC_DB.myConnection().createStatement().executeQuery("SELECT size FROM size");
                DefaultComboBoxModel dcm = (DefaultComboBoxModel) jComboBox3_Size.getModel();
                dcm.removeAllElements();
                dcm.addElement("~Select Size~");
                while (rs.next()) {
                    dcm.addElement((rs.getString("size")));
                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        }).start();

    }

}
