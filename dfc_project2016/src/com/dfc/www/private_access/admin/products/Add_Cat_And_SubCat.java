/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dfc.www.private_access.admin.products;

import com.fsc.www.db.MC_DB;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Buwaneka
 */
public class Add_Cat_And_SubCat extends javax.swing.JPanel {

    int catid;

    /**
     * Creates new form Add_Cat_And_SubCat
     */
    public Add_Cat_And_SubCat() {
        initComponents();
        addData_to_List();
        addData_to_SubCat_List();
        add_Tabel_cat();
        load_Categories_to_Subcat_combobox();
        add_Tabel_Subcat();

        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCatName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        txtSubcatogery = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jLabel5 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        jPanel1.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(255, 87, 34));
        jPanel2.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Category List :");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(20, 130, 110, 20);

        txtCatName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtCatName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCatNameActionPerformed(evt);
            }
        });
        txtCatName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCatNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCatNameKeyTyped(evt);
            }
        });
        jPanel2.add(txtCatName);
        txtCatName.setBounds(20, 80, 300, 40);

        jScrollPane1.setViewportView(jList1);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(20, 170, 300, 110);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/dfc/www/public_access/images/fdc_button.png"))); // NOI18N
        jButton1.setText("Add");
        jButton1.setContentAreaFilled(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/com/dfc/www/public_access/images/fdc_button_hover.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);
        jButton1.setBounds(20, 300, 300, 40);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Category Name :");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(20, 40, 110, 20);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 340, 620);

        jPanel3.setBackground(new java.awt.Color(255, 127, 0));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Category Id", "Catgory Name"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        jPanel1.add(jPanel3);
        jPanel3.setBounds(340, 0, 350, 620);

        jPanel4.setBackground(new java.awt.Color(255, 87, 34));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Category :");

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "~Category~" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Sub Category List :");

        txtSubcatogery.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtSubcatogery.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSubcatogeryKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSubcatogeryKeyTyped(evt);
            }
        });

        jScrollPane5.setViewportView(jList2);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Sub Category :");

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/dfc/www/public_access/images/fdc_button.png"))); // NOI18N
        jButton2.setText("Add");
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/dfc/www/public_access/images/fdc_button_hover.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox1, 0, 300, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtSubcatogery)
                        .addComponent(jScrollPane5))
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSubcatogery, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel4);
        jPanel4.setBounds(690, 0, 330, 620);

        jPanel5.setBackground(new java.awt.Color(255, 127, 0));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Category", "Sub Category"
            }
        ));
        jScrollPane4.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 579, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        jPanel1.add(jPanel5);
        jPanel5.setBounds(1020, 0, 350, 620);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1366, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try {
            new Thread(() -> {

                try {

                    MC_DB.myConnection().createStatement().executeUpdate("INSERT INTO category(category_name,status)VALUES('" + txtCatName.getText() + "' , '0001')");
                    JOptionPane.showMessageDialog(this, "Saved");
                    txtCatName.setText("");

                    addData_to_List();
                    add_Tabel_cat();
                    load_Categories_to_Subcat_combobox();
                    jButton1.setEnabled(false);

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }).start();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtCatNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCatNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCatNameActionPerformed

    private void txtCatNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCatNameKeyReleased

        new Thread(() -> {
            try {
                String s;
                if (!txtCatName.getText().equals("")) {
                    ResultSet rs = MC_DB.myConnection().createStatement().executeQuery("SELECT * FROM category WHERE category_name LIKE '" + txtCatName.getText() + "%' ");
                    Vector v = new Vector();

                    while (rs.next()) {
                        s = rs.getString("category_name");
                        v.add(s);
                        jList1.setListData(v);
                        if (txtCatName.getText().toLowerCase().equals(s.toLowerCase())) {

                            jButton1.setEnabled(false);
                        } else {

                            System.out.println(txtCatName.getText().toLowerCase().equals(s.toLowerCase()));
                            jButton1.setEnabled(true);
                            addData_to_List();

                        }
                    }

                } else {
                    jButton1.setEnabled(false);
                    addData_to_List();
                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        }).start();
////////////////////////////////////////////////////////////////////////////////////////////////
        try {
            ///////////////////////////////Check Text Fileds Values is empty?//////////////////////////////////////////////
            if (txtCatName.getText().isEmpty()) {
                jButton1.setEnabled(false);
            } else {

                if (txtCatName.getText().length() != 0) {
                    jButton1.setEnabled(true);
                }

            }

            if (evt.getKeyCode() == 10) {
                jButton1.grabFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_txtCatNameKeyReleased

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        try {
            ///////////////////////////////Check Text Fileds Values is empty?//////////////////////////////////////////////
            if (jComboBox1.getSelectedIndex() == 0) {
                jButton2.setEnabled(false);
            } else {

                if (txtCatName.getText().length() != 0 && jComboBox1.getSelectedIndex() != 0) {
                    jButton2.setEnabled(true);
                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void txtCatNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCatNameKeyTyped
        try {
            char c = evt.getKeyChar();
            if (Character.isDigit(c)) {

                Toolkit.getDefaultToolkit().beep();
                evt.consume();
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtCatNameKeyTyped

    private void txtSubcatogeryKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSubcatogeryKeyTyped
        try {
            char c = evt.getKeyChar();
            if (Character.isDigit(c)) {

                Toolkit.getDefaultToolkit().beep();
                evt.consume();
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtSubcatogeryKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {

            ResultSet rs = MC_DB.myConnection().createStatement().executeQuery("SELECT category_id FROM category WHERE category_name = '" + jComboBox1.getSelectedItem() + "' ");
            while (rs.next()) {
                catid = Integer.parseInt(rs.getString("category_id"));
            }

            MC_DB.myConnection().createStatement().executeUpdate("INSERT INTO sub_category(category_id,sub_category,status) VALUES('" + catid + "' , '" + txtSubcatogery.getText() + "','" + "0001" + "')");
            txtSubcatogery.setText("");
            jComboBox1.setSelectedIndex(0);
            JOptionPane.showMessageDialog(this, "Saved");
            addData_to_SubCat_List();
            add_Tabel_Subcat();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtSubcatogeryKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSubcatogeryKeyReleased
        new Thread(() -> {
            try {
                String s;
                if (!txtSubcatogery.getText().equals("") && !txtSubcatogery.getText().equals(null)) {
                    ResultSet rs = MC_DB.myConnection().createStatement().executeQuery("SELECT * FROM sub_category WHERE sub_category LIKE '" + txtSubcatogery.getText() + "%' ");
                    Vector v = new Vector();

                    while (rs.next()) {
                        s = rs.getString("sub_category");
                        v.add(s);
                        jList2.setListData(v);
                        if (txtSubcatogery.getText().toLowerCase().equals(s.toLowerCase())) {
                            System.out.println(txtSubcatogery.getText().toLowerCase().equals(s.toLowerCase()));
                            jButton2.setEnabled(false);
                        } else {

                            System.out.println(txtSubcatogery.getText().toLowerCase().equals(s.toLowerCase()));
                            jButton2.setEnabled(true);
                            addData_to_SubCat_List();

                           

                        }
                    }

                } else {
                    addData_to_List();
                    jButton2.setEnabled(false);
                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        }).start();

        try {
            ///////////////////////////////Check Text Fileds Values is empty?//////////////////////////////////////////////
            if (txtSubcatogery.getText().length() == 0) {
                jButton2.setEnabled(false);
            } else {

                if (txtSubcatogery.getText().length() != 0 && jComboBox1.getSelectedIndex() != 0) {
                    jButton2.setEnabled(true);
                }

            }

            if (evt.getKeyCode() == 10) {
                jButton2.grabFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtSubcatogeryKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField txtCatName;
    private javax.swing.JTextField txtSubcatogery;
    // End of variables declaration//GEN-END:variables

    void addData_to_List() {

        new Thread(() -> {
            try {
                ResultSet rs = MC_DB.myConnection().createStatement().executeQuery("SELECT * FROM category");
                Vector v = new Vector();
                jList1.removeAll();
                while (rs.next()) {
                    v.add(rs.getString("category_name"));
                    jList1.setListData(v);

                }

            } catch (Exception e) {
                e.printStackTrace();

            }

        }).start();

    }

    void add_Tabel_cat() {

        new Thread(() -> {
            try {

                ResultSet rs = MC_DB.myConnection().createStatement().executeQuery("SELECT * FROM category");

                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                dtm.setRowCount(0);
                while (rs.next()) {
                    Vector v = new Vector();
                    v.add(rs.getString("category_id"));
                    v.add(rs.getString("category_name"));
                    dtm.addRow(v);

                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        }).start();

    }

    void load_Categories_to_Subcat_combobox() {

        new Thread(() -> {

            try {

                ResultSet rs = MC_DB.myConnection().createStatement().executeQuery("SELECT category_name FROM category");
                DefaultComboBoxModel dcm = (DefaultComboBoxModel) jComboBox1.getModel();

                while (rs.next()) {
                    dcm.addElement((rs.getString("category_name")));
                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        }).start();

    }

    void add_Tabel_Subcat() {

        new Thread(() -> {

            try {

//            ResultSet rs = MC_DB.myConnection().createStatement().executeQuery("SELECT category.category_name,sub_category.sub_category FROM sub_category INNER JOIN category");
//            DefaultTableModel dtm  =  (DefaultTableModel) jTable2.getModel();
//            dtm.setRowCount(0);
//            
//            while (rs.next()) {                
//                
//                Vector v =  new Vector();
//                v.add(rs.getString("category.category_name"));
//                v.add(rs.getString("sub_category"));
//                dtm.addRow(v);
//                
//            }
                ResultSet rs = MC_DB.myConnection().createStatement().executeQuery("SELECT * FROM sub_category");
                DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
                dtm.setRowCount(0);

                while (rs.next()) {
                    int id = Integer.parseInt(rs.getString("category_id"));
                    Vector v = new Vector();
                    ResultSet rss = MC_DB.myConnection().createStatement().executeQuery("SELECT * FROM category WHERE category_id = '" + id + "' ");
                    while (rss.next()) {
                        v.add(rss.getString("category_name"));
                    }
                    v.add(rs.getString("sub_category"));
                    dtm.addRow(v);

                }

            } catch (Exception e) {
                e.printStackTrace();
            }

        }).start();

    }

    void addData_to_SubCat_List() {

        new Thread(() -> {
            try {
                ResultSet rs = MC_DB.myConnection().createStatement().executeQuery("SELECT * FROM sub_category");
                Vector v = new Vector();
                jList2.removeAll();
                while (rs.next()) {
                    v.add(rs.getString("sub_category"));
                    jList2.setListData(v);

                }

            } catch (Exception e) {
                e.printStackTrace();

            }

        }).start();

    }

}
